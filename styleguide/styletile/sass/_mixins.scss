@mixin opacity( $value: 1) {

	opacity: $value; 
	filter: alpha( opacity= $value * 100 );
}



@mixin border-radius( $value : 10px ) {
	
	-webkit-border-radius: $value; /* Saf3-4, iOS 1-3.2, Android <e;1.6 */
	   -moz-border-radius: $value; /* FF1-3.6 */
			border-radius: $value; /* Opera 10.5, IE9, Saf5, Chrome, FF4, iOS 4, Android 2.1+ */

	/* useful if you don't want a bg color from leaking outside the border: */
	-webkit-background-clip: padding-box; 
	   -moz-background-clip: padding; 
		    background-clip: padding-box;
}


@mixin box-shadow( $horiz : .5em , $vert : .5em , $blur : 0px , $spread : 0px , $color : #000000 ) {
	
  -webkit-box-shadow: $horiz $vert $blur $spread $color; /* Saf3-4, iOS 4.0.2 - 4.2, Android 2.3+ */
     -moz-box-shadow: $horiz $vert $blur $spread $color; /* FF3.5 - 3.6 */
          box-shadow: $horiz $vert $blur $spread $color; /* Opera 10.5, IE9, FF4+, Chrome 6+, iOS 5 */
}

@mixin hide-text {
	font: 0/0 a;
	text-shadow: none;
	color: transparent;
}

@mixin clearfix {
  zoom: 1;

  &:before,
  &:after {
    content: "";
    display: table;
  }

  &:after {
    clear: both;
  }
}

@mixin linear-gradient($pos, $G1, $G2: false,
                       $G3: false, $G4: false,
                       $G5: false, $G6: false,
                       $G7: false, $G8: false,
                       $G9: false, $G10: false,
                       $deprecated-pos1: left top,
                       $deprecated-pos2: left bottom,
                       $fallback: false) {
  // Detect what type of value exists in $pos
  $pos-type: type-of(nth($pos, 1));

  // If $pos is missing from mixin, reassign vars and add default position
  @if ($pos-type == color) or (nth($pos, 1) == "transparent")  {
    $G10: $G9; $G9: $G8; $G8: $G7; $G7: $G6; $G6: $G5;
     $G5: $G4; $G4: $G3; $G3: $G2; $G2: $G1; $G1: $pos;
    $pos: top; // Default position
  }

  $full: compact($G1, $G2, $G3, $G4, $G5, $G6, $G7, $G8, $G9, $G10);

  // Set $G1 as the default fallback color
  $fallback-color: nth($G1, 1);

  // If $fallback is a color use that color as the fallback color
  @if (type-of($fallback) == color) or ($fallback == "transparent") {
    $fallback-color: $fallback;
  }

  background-color: $fallback-color;
  background-image: deprecated-webkit-gradient(linear, $deprecated-pos1, $deprecated-pos2, $full); // Safari <= 5.0
  background-image:  -webkit-linear-gradient($pos, $full); // Safari 5.1+, Chrome
  background-image:     -moz-linear-gradient($pos, $full);
  background-image:      -ms-linear-gradient($pos, $full);
  background-image:       -o-linear-gradient($pos, $full);
  background-image: unquote("linear-gradient(#{$pos}, #{$full})");
}

@mixin transition ($prop-1: all 0.15s ease-out 0,
  $prop-2: false, $prop-3: false,
  $prop-4: false, $prop-5: false,
  $prop-6: false, $prop-7: false,
  $prop-8: false, $prop-9: false)
  {
    $full: compact($prop-1, $prop-2, $prop-3, $prop-4, $prop-5,
                   $prop-6, $prop-7, $prop-8, $prop-9);

  @include prefixer(transition, $full, webkit, moz, ms, o);
}
